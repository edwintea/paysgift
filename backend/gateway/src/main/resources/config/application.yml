spring:
  config:
    activate:
      on-profile: ${APP_ACTIVE}
  application:
    name: ${APP_NAME}
  server:
    port: ${SERVER_PORT}
    address: ${SERVER_HOST}
    forward-headers-strategy: native
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
  kafka:
    bootstrap-servers: ${KAFKA_SERVICE}
  cloud:
    gateway:
      default-filters:
        - JWTRelay
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          predicates:
            - name: Path
              args:
                pattern: "'/services/'+serviceId.toLowerCase()+'/**'"
          filters:
            - StripPrefix=2
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/products/**
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/orders/**
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/api/payments/**
        - id: master-service
          uri: lb://master-service
          predicates:
            - Path=/api/masters/**
        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/api/notifications/**
        - id: transaction-service
          uri: lb://transaction-service
          predicates:
            - Path=/api/transactions/**
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false
  jackson:
    serialization:
      indent-output: true

eureka:
  client:
    enabled: true
    healthcheck:
      enabled: true
    fetch-registry: true
    register-with-eureka: false
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
  instance:
    appname: paysgift
    instanceId: paysgift:${spring.application.instance-id:${random.value}}
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    status-page-url-path: ${management.endpoints.web.base-path}/info
    health-check-url-path: ${management.endpoints.web.base-path}/health
    metadata-map:
      zone: primary
      profile: ${spring.profiles.active}
      version: '@project.version@'
      git-version: ${git.commit.id.describe:}
      git-commit: ${git.commit.id.abbrev:}
      git-branch: ${git.branch:}
      context-path: ${server.servlet.context-path:}

management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          - configprops
          - env
          - gateway
          - health
          - info
          - jhimetrics
          - jhiopenapigroups
          - logfile
          - loggers
          - prometheus
          - threaddump
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
    env:
      enabled: true
  health:
    mail:
      enabled: false
  prometheus:
    metrics:
      export:
        enabled: true
        step: 60
  observations:
    key-values:
      application: ${spring.application.name}
  metrics:
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    data:
      repository:
        autotime:
          enabled: true
    tags:
      application: ${spring.application.name}

logging:
  level:
    ROOT: ${APP_LOG_LEVEL}
    tech.jhipster: ${APP_LOG_LEVEL}
    org.hibernate.SQL: ${APP_LOG_LEVEL}
    com.gateway.paysgift: ${APP_LOG_LEVEL}

jhipster:
  clientApp:
    name: ${APP_NAME}
  gateway:
    rate-limiting:
      enabled: false
      limit: 100000
      duration-in-seconds: 3600
  registry:
    password: admin
  cors:
    allowed-origins: 'http://localhost:8100,https://localhost:8100'
    allowed-origin-patterns: 'https://*.githubpreview.dev'
    allowed-methods: '*'
    allowed-headers: '*'
    exposed-headers: 'Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params'
    allow-credentials: true
    max-age: 1800
  security:
    authentication:
      jwt:
        base64-secret: NWJlOTI0M2RhMjA5ZTYzMGIzZTk3MGI0NjBiODliZTQzYWJiMjFhOTc1YWFhNGZkYTcyNWY4MDdjOTA2N2FmMGIzY2E1YzUxZGJlZWQ4YjU0OGNjNGU1NTVkNGMwZmUwZDUzN2Y1NzExNDZlOTM3ZmIzNGM5ZDliMTk0NmE2YjU=
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
