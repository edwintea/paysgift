entity Transaction {
  customerId Integer required,
  countryId Integer required,
  clientId Integer required,
  channelId Integer required,
  brandId Integer required,
  currencyId Integer required,
  currencyCode String required,
  currencyRate BigDecimal required,
  paymentId Long required,
  couponCodeId Long,
  shopbackReference String,
  code String required,
  invoiceCode String required,
  productPrice BigDecimal required,
  productPriceUsd BigDecimal required,
  deliveryPrice BigDecimal required,
  deliveryPriceUsd BigDecimal required,
  discProductPrice BigDecimal required,
  discProductPriceUsd BigDecimal required,
  discDeliveryPrice BigDecimal required,
  discDeliveryPriceUsd BigDecimal required,
  discCouponPrice BigDecimal required,
  discCouponPriceUsd BigDecimal required,
  serviceFee BigDecimal required,
  serviceFeeUsd BigDecimal required,
  totalPayment BigDecimal required,
  totalPaymentUsd BigDecimal required,
  paymentNumber TextBlob,
  paymentQr TextBlob,
  paymentLink TextBlob,
  paymentStatus Boolean,
  paymentExpired Instant,
  paymentReferenceId TextBlob,
  paidedAt Instant,
  status String required,
  createdAt Instant,
  createdBy Integer required,
  updatedAt Instant,
  updatedBy Integer required
}

// You can define relationships here if needed
relationship ManyToOne {
  Transaction{customerId} to Customer,
  Transaction{countryId} to Country,
  Transaction{clientId} to Client,
  Transaction{channelId} to Channel,
  Transaction{brandId} to Brand,
  Transaction{currencyId} to Currency,
  Transaction{couponCodeId} to CouponCode,
  Transaction{paymentId} to Payment
}
