spring:
  application:
    name: ${APP_NAME}
  config:
    activate:
      on-profile: ${APP_ACTIVE}
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
      properties:
        hibernate.jdbc.time_zone: UTC
        hibernate.timezone.default_storage: NORMALIZE
        hibernate.type.preferred_instant_jdbc_type: TIMESTAMP
        hibernate.id.new_generator_mappings: true
        hibernate.connection.provider_disables_autocommit: true
        hibernate.cache.use_second_level_cache: false
        hibernate.cache.use_query_cache: false
        hibernate.generate_statistics: false
        hibernate.jdbc.batch_size: 25
        hibernate.order_inserts: true
        hibernate.order_updates: true
        hibernate.query.fail_on_pagination_over_collection_fetch: true
        hibernate.query.in_clause_parameter_padding: true
      open-in-view: false
      hibernate:
        ddl-auto: none
        naming:
          physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
          implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  autoconfigure:
    exclude: org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration
  docker:
    compose:
      enabled: false
      lifecycle-management: start-only
      file: src/main/docker/mysql.yml
  jmx:
    enabled: false
  messages:
    basename: i18n/messages
    cache-duration: PT1S
  main:
    allow-bean-definition-overriding: true
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false
  jackson:
    serialization:
      indent-output: true
  cloud:
    consul:
      config:
        fail-fast: false
        format: yaml
        profile-separator: '-'
      discovery:
        prefer-ip-address: true
        tags:
          - profile=${spring.profiles.active}
          - version='@project.version@'
          - git-version=${git.commit.id.describe:}
          - git-commit=${git.commit.id.abbrev:}
          - git-branch=${git.branch:}
      host: localhost
      port: 8500
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://${MYSQL_SERVICE}:3306/${DB_NAME}?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&createDatabaseIfNotExist=true
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      poolName: Hikari
      auto-commit: false
  elasticsearch:
    uris: http://localhost:9200
  liquibase:
    contexts: dev, faker
  thymeleaf:
    cache: false
  redis:
    host: ${REDIS_SERVICE}
    port: ${REDIS_PORT}
  prometheus:
    metrics:
      export:
        enabled: true
        step: 60

management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          - configprops
          - env
          - health
          - info
          - jhimetrics
          - jhiopenapigroups
          - logfile
          - loggers
          - prometheus
          - threaddump
          - caches
          - liquibase
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState, db
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
    env:
      enabled: true
  health:
    elasticsearch:
      enabled: false
    zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
      tracing:
        endpoint: http://localhost:9411/api/v2/spans
    tracing:
      sampling:
        probability: 1.0 # report 100% of traces
    mail:
      enabled: false

  metrics:
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    data:
      repository:
        autotime:
          enabled: true
    tags:
      application: ${spring.application.name}

feign:
  circuitbreaker:
    enabled: true

springdoc:
  api-docs:
    enabled: false

app:
  name: ${APP_NAME}
  version: ${APP_VERSION}
  description: ${APP_DESCRIPTION}
  feature:
    enable-new-feature: true
  service:
    timeout: ${APP_SERVICE_TIMEOUT}

logging:
  level:
    ROOT: ${APP_LOG_LEVEL:INFO}
    tech.jhipster: ${APP_LOG_LEVEL:INFO}
    org.hibernate.SQL: ${APP_LOG_LEVEL:INFO}
    com.paysgift.masterservice: ${APP_LOG_LEVEL:INFO}
    org.elasticsearch : ${APP_LOG_LEVEL:INFO}


jhipster:
  clientApp:
    name: ${APP_NAME}
  security:
    authentication:
      jwt:
        base64-secret: NDllZjM0NDRmYzQ0MTEyNzgzNjhiMjI3NzM0ZWUyNjI3MGEwNmU2YjkxYzA5YWQyMjc1OGEyNDVlZDY1YjYzNDEwNWEwMjEwYzNiZTFmMmRiNzFkOGZiYzI0Y2FiNWQ0ZjRjNjM3NWQ3YjE5ODdjMzc0NjljMjlkYTU3Y2EyYjc=
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000

server:
  port: ${SERVER_PORT}
  address: ${SERVER_ADDRESS}
  forward-headers-strategy: native

